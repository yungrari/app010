import { useState } from 'react'
import { useSwipeable } from 'react-swipeable'
import Head from 'next/head'
import Image from 'next/image'

import MEG from '../assets/MEG.png'
import DieUnscreen from '../assets/die-unscreen(1).gif'
import HDC2 from '../assets/HDC2.png'
import Pentagram from '../assets/penta.png'
import Tor from '../assets/tor(2).gif'
import styles from '../styles/Home.module.css'

const WIDTH = 40
const HEIGHT = 30
const PERSPECTIVE = 5000
const CELLS = [
  { id: 'MEG.png', src: MEG },
  { id: 'die-unscreen (1).gif', src: DieUnscreen },
  { id: 'HDC2 (1).png', src: HDC2 },
  { id: 'penta (3).png', src: Pentagram },
  { id: 'tor(2).gif', src: Tor },
]

export default function Home() {
  const [degree, setDegree] = useState(0)

  const handleSwipe = useSwipeable({
    onSwipedLeft: ({ deltaX }) => setDegree((prevState) => prevState + deltaX),
    onSwipedRight: ({ deltaX }) => setDegree((prevState) => prevState - deltaX),
    trackTouch: true,
    trackMouse: true,
  })

  return (
    <>
      <Head>
        <title>Bernstein Network Computational Neuroscience</title>
        <meta name="description" content="Generated by yungrari Â©" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.wrapper} {...handleSwipe}>
        <div className={styles.logo}>
          <Image src="/bccn-logo.svg" alt="BCCN" width={200} height={129} />
        </div>

        <div
          className={styles.scene}
          style={{
            width: `${WIDTH}vw`,
            height: `${HEIGHT}vh`,
            perspective: `${PERSPECTIVE}px`,
          }}
        >
          <div
            className={styles.carousel}
            style={{
              transform: `rotateY(${degree}deg)`,
            }}
          >
            {CELLS.map((value, index, array) => (
              <div
                key={value.id}
                className={styles.cell}
                style={{
                  width: `${WIDTH}vw`,
                  height: `${HEIGHT}vh`,
                  transform: `rotateY(${
                    (360 / array.length) * index
                  }deg) translateZ(${
                    WIDTH / 2 / Math.tan(Math.PI / array.length)
                  }vw)`,
                }}
              >
                <Image src={value.src} alt={value.id} draggable="false" fill />
              </div>
            ))}
          </div>
        </div>
      </main>
    </>
  )
}
